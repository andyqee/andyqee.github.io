<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yee's Blog]]></title>
  <link href="http://andyqee.github.io/atom.xml" rel="self"/>
  <link href="http://andyqee.github.io/"/>
  <updated>2014-09-24T17:15:25+08:00</updated>
  <id>http://andyqee.github.io/</id>
  <author>
    <name><![CDATA[Yee Qee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LeetCode: 4Sum]]></title>
    <link href="http://andyqee.github.io/blog/2014/09/24/leetcode-4sum/"/>
    <updated>2014-09-24T16:33:36+08:00</updated>
    <id>http://andyqee.github.io/blog/2014/09/24/leetcode-4sum</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode Gray Code]]></title>
    <link href="http://andyqee.github.io/blog/2014/09/24/leetcode-gray-code/"/>
    <updated>2014-09-24T00:00:00+08:00</updated>
    <id>http://andyqee.github.io/blog/2014/09/24/leetcode-gray-code</id>
    <content type="html"><![CDATA[<p>The gray code is a binary numeral system where two successive values differ in only one bit.</p>

<p>Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p>

<p>For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>00 - 0
</span><span class='line'>01 - 1
</span><span class='line'>11 - 3
</span><span class='line'>10 - 2</span></code></pre></td></tr></table></div></figure>


<p><strong>Note:</strong></p>

<p>For a given n, a gray code sequence is not uniquely defined.</p>

<p>For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.</p>

<p>For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.</p>

<h2>Solution</h2>

<figure class='code'><figcaption><span> (grayCode.cpp)</span> <a href='http://andyqee.github.io/downloads/code/leetcode/grayCode.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">grayCode</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>            <span class="n">result</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">adder</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">result</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
</span><span class='line'>                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">len</span> <span class="o">-</span><span class="mi">1</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="o">--</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="kt">int</span> <span class="n">element</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">adder</span><span class="p">;</span>
</span><span class='line'>                    <span class="n">result</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">element</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yi's CV]]></title>
    <link href="http://andyqee.github.io/blog/2014/05/18/yis-cv/"/>
    <updated>2014-05-18T14:15:20+08:00</updated>
    <id>http://andyqee.github.io/blog/2014/05/18/yis-cv</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
